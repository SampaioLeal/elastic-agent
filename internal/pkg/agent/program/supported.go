// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/internals/dev-tools/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/elastic-agent-shipper.spec.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
